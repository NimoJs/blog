@startuml
title: 数据最终一致：TTL延迟双删\ngithub.com/nimoc/blog/issues/41
autonumber
actor updateRequest
control server
database cache #pink
database database #purple
updateRequest->server: 发起修改数据请求
server->cache: 给缓存key设置过期时间：EXPIRE cacheKey 5
note right: 此时如果缓存 key 被其他线程删除，则会导致过期没有设置过期时间\n过期时间一般设置为更新数据库的最长时间\n在极端情况下还是会出现更新数据库的时间超过了 key 的过期时间。\n 这种极端情况下会出现数据不一致。
server->server: 并发场景下别的线程触发了同步缓存的操作
note left#lightgreen:  数据最终一致：EXPIRE key会清除这里同步的缓存\n更新数据库前数据会短暂不一致。
server->database: 更新数据库：UPDATE table SET title=?,describe=? WHERE id = ?
alt 数据库更新失败:
  server->x updateRequest: 返回更新失败
  note right#lightgreen: 数据一致：此时没有产生新数据
end
server->cache: 第二次删除缓存：HDET cacheKey id
alt 第二次删除缓存失败:
  server->updateRequest: 返回更新成功
  note right#lightblue: 数据最终一致：因为前面给 key 设置了过期时间，\n当前删除失败会导致数据短暂的不一致。\n 等到缓存 key 的过期时间到了缓存会被删除，此时数据一致。
end
server->o updateRequest: 返回更新成功
note right#lightgreen: 数据一致：此时缓存中无数据，而**数据库中有新数据**。
@enduml
